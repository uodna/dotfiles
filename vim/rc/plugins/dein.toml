[[plugins]]
repo = 'Shougo/dein.vim'
rtp = ''
hook_add = 'source ~/.config/nvim/rc/plugins/configs/dein.rc.vim'

[[plugins]]
repo = 'morhetz/gruvbox'
hook_add = '''
  let g:gruvbox_contrast_dark = 'medium'
  let g:gruvbox_invert_selection = 0
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/vimproc.vim'
builld = 'make'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_source = 'source ~/.config/nvim/rc/plugins/configs/denite.rc.vim'

[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_source = 'source ~/.config/nvim/rc/plugins/configs/fzf.rc.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_source = 'source ~/.config/nvim/rc/plugins/configs/lightline.rc.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'

[[plugins]]
repo = 'w0rp/ale'
hook_source = '''
  let g:ale_lint_on_text_changed = 0
  let g:ale_lint_on_enter = 0
  let g:ale_lint_on_save = 1
  let g:ale_linters = {'go': ['gometalinter', 'gofmt']}
  let g:ale_fixers = {'javascript': ['prettier']}
  let g:ale_fix_on_save = 1
  let g:ale_javascript_prettier_use_local_config = 1
  let g:ale_go_gometalinter_options = '--disable-all --enable=vet --enable=gotype'

  nnoremap <leader>an :ALENextWrap<cr>
  nnoremap <leader>ap :ALEPreviousWrap<cr>
'''

[[plugins]]
repo = 'nixprime/cpsm'
build = 'PY3=ON sh install.sh'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'tpope/vim-rails'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'rhysd/committia.vim'
on_ft = 'gitcommit'
hook_add = '''
  let g:committia_hooks = {}
  function! g:committia_hooks.edit_open(info)
     " If no commit message, start with insert mode
      if a:info.vcs ==# 'git' && getline(1) ==# ''
          startinsert
      end

      " Scroll the diff window from insert mode
      " Map <C-n> and <C-p>
      imap <buffer><C-n> <Plug>(committia-scroll-diff-down-half)
      imap <buffer><C-p> <Plug>(committia-scroll-diff-up-half)

  endfunction
'''

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'rhysd/vim-textobj-ruby'
on_ft = 'ruby'

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'rhysd/vim-operator-surround'
hook_add = '''
  map <silent> sa <Plug>(operator-surround-append)
  map <silent> sd <Plug>(operator-surround-delete)a
  map <silent> sr <Plug>(operator-surround-replace)a
'''

[[plugins]]
repo = 'brooth/far.vim'
hook_add = '''
  let g:far#window_layout = 'bottom'
  let g:far#window_height = 30
  let g:far#result_preview = 0
  let g:far#preview_window_layout = 'bottom'
'''

[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
  let g:neoterm_default_mod = 'botright'
  let g:neoterm_keep_term_open = 1
  let g:neoterm_autoinsert = 1
  let g:neoterm_autojump = 1

  nnoremap <silent> T :call neoterm#toggle()<cr>
  tnoremap <silent> <C-\> <C-\><C-n>
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'cohama/lexima.vim'
hook_source = '''
  let g:lexima_enable_basic_rules = 1
  call lexima#add_rule({'char': '<C-h>', 'at': '(\%#)',   'delete': 1})
  call lexima#add_rule({'char': '<C-h>', 'at': '{\%#}',   'delete': 1})
  call lexima#add_rule({'char': '<C-h>', 'at': '\[\%#\]', 'delete': 1})
  call lexima#add_rule({'char': '<C-h>', 'at': '"\%#"',   'delete': 1})
  call lexima#add_rule({'char': '<C-h>', 'at': "'\\%#'",  'delete': 1})
  call lexima#add_rule({'char': '<C-h>', 'at': '`\%#`',   'delete': 1})
'''

[[plugins]]
repo = 'neoclide/vim-easygit'

[[plugins]]
repo = 'neoclide/denite-git'

[[plugins]]
repo = 'xolox/vim-misc'

[[plugins]]
repo = 'xolox/vim-session'
hook_add = 'source ~/.config/nvim/rc/plugins/configs/vim-session.rc.vim'

[[plugins]]
repo = 'k0kubun/vim-open-github'

[[plugins]]
repo = 'godlygeek/tabular'

[[plugins]]
repo = 'machakann/vim-highlightedyank'

[[plugins]]
repo = 'simnalamburt/vim-mundo'

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
  let g:EasyMotion_do_mapping = 0
  let g:EasyMotion_smartcase = 1
  let g:EasyMotion_use_smartsign_jp = 1
  let g:EasyMotion_enter_jump_first = 1
'''

[[plugins]]
repo = 'haya14busa/incsearch.vim'
hook_add = '''
  let g:incsearch#auto_nohlsearch = 0
  let g:incsearch#emacs_like_keymap = 1
  let g:incsearch#magic = '\v'
  augroup incsearch-keymap
      autocmd!
      autocmd VimEnter * call s:incsearch_keymap()
  augroup END
  function! s:incsearch_keymap()
      IncSearchNoreMap <C-j>   <Over>(incsearch-next)
      IncSearchNoreMap <C-k>   <Over>(incsearch-prev)
      IncSearchNoreMap <Tab>   <Over>(incsearch-scroll-f)
      IncSearchNoreMap <S-Tab> <Over>(incsearch-scroll-b)
  endfunction
'''

[[plugins]]
repo = 'haya14busa/incsearch-fuzzy.vim'

[[plugins]]
repo = 'haya14busa/incsearch-easymotion.vim'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  let g:indent_guides_enable_on_vim_startup = 1
  let g:indent_guides_start_level = 2
  let g:indent_guides_guide_size = 1
  let g:indent_guides_exclude_filetypes = ['help', 'nerdtree', 'neoterm', 'mundo', 'fzf', 'man']
'''

[[plugins]]
repo = 'vim-scripts/AnsiEsc.vim'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'glidenote/memolist.vim'

[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = '''
  let g:rainbow_active = 1
'''

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
  let g:lsp_async_completion = 0

  function! s:find_root_uri(filename) abort
    let l:buffer_filename = lsp#utils#find_nearest_parent_file_directory(
    \   lsp#utils#get_buffer_path(),
    \   a:filename,
    \ )

    return lsp#utils#path_to_uri(l:buffer_filename)
  endfunction

  if executable('flow-language-server')
    autocmd User lsp_setup call lsp#register_server({
    \   'name': 'flow-language-server',
    \   'cmd': { server_info ->
    \     [&shell, &shellcmdflag, 'flow-language-server --stdio --try-flow-bin']
    \   },
    \   'root_uri': { server_info -> s:find_root_uri('.flowconfig') },
    \   'whitelist': ['javascript'],
    \ })
  endif
'''

[[plugins]]
repo = 'pangloss/vim-javascript'

[[plugins]]
repo = 'rizzatti/dash.vim'
hook_add = '''
  let g:dash_map = {
    \ 'ruby' : 'rb'
    \ }
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  nnoremap <silent> <Leader>qr :<C-u>QuickRun<CR>
  nnoremap <silent> <Leader>ql :<C-u>QuickRun ruby.rspec.line<CR>
  nnoremap <silent> <Leader>qq :<C-u>bw! \[quickrun\ output\]<CR>
  let g:quickrun_config = {
  \   '_': {
  \     'runner': 'vimproc',
  \     'runner/vimproc/updatetime': 100,
  \     'outputter' : 'buffer',
  \     'outputter/buffer/close_on_empty' : 1,
  \   },
  \   'ruby.rspec': {
  \     'exec': 'rspec %s %o -fd --tty',
  \   },
  \   'ruby.rspec.line': {
  \     'command': 'rspec',
  \     'exec': 'rspec %s:%{line(".")} %o -fd --tty',
  \   },
  \ }
'''

[[plugins]]
repo = 'hashivim/vim-terraform'
hook_add = '''
  let g:terraform_fmt_on_save = 1
'''

[[plugins]]
repo = 'terryma/vim-multiple-cursors'

[[plugins]]
repo = 'haya14busa/vim-migemo'

[[plugins]]
repo = 'haya14busa/incsearch-migemo.vim'
